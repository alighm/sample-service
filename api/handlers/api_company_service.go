/*
 * OpenAPI Go Reference Service
 *
 * This is a sample Go Reference
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package handlers

import (
	"context"
	"errors"
	"net/http"

	. "github.com/alighm/sample-service/api/gen"
)

// CompanyAPIService is a service that implements the logic for the CompanyAPIServicer
// This service should implement the business logic for every endpoint for the CompanyAPI API.
// Include any external packages or services that will be required by this service.
type CompanyAPIService struct {
}

// NewCompanyAPIService creates a default api service
func NewCompanyAPIService() CompanyAPIServicer {
	return &CompanyAPIService{}
}

// AddCompany - Add a new company
func (s *CompanyAPIService) AddCompany(ctx context.Context, xRequestID string, company Company) (ImplResponse, error) {
	// TODO - update AddCompany with the required logic for this service method.
	// Add api_company_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddCompany method not implemented")
}

// DeleteCompany - Deletes a company
func (s *CompanyAPIService) DeleteCompany(ctx context.Context, xRequestID string, companyId string) (ImplResponse, error) {
	// TODO - update DeleteCompany with the required logic for this service method.
	// Add api_company_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteCompany method not implemented")
}

// GetCompanies - Get all companies
func (s *CompanyAPIService) GetCompanies(ctx context.Context, xRequestID string) (ImplResponse, error) {
	// TODO - update GetCompanies with the required logic for this service method.
	// Add api_company_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CompanyView{}) or use other options such as http.Ok ...
	// return Response(200, CompanyView{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCompanies method not implemented")
}

// GetCompany - Find company by ID
func (s *CompanyAPIService) GetCompany(ctx context.Context, xRequestID string, companyId string) (ImplResponse, error) {
	// TODO - update GetCompany with the required logic for this service method.
	// Add api_company_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CompanyView{}) or use other options such as http.Ok ...
	// return Response(200, CompanyView{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCompany method not implemented")
}

// UpdateCompany - Updates a company
func (s *CompanyAPIService) UpdateCompany(ctx context.Context, xRequestID string, companyId string, company Company) (ImplResponse, error) {
	// TODO - update UpdateCompany with the required logic for this service method.
	// Add api_company_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCompany method not implemented")
}
